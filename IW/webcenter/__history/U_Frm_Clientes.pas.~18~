unit U_Frm_Clientes;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, U_FrmPadrao, IWVCLComponent,
  IWBaseLayoutComponent, IWBaseContainerLayout, IWContainerLayout,
  IWTemplateProcessorHTML, IWCompButton, IWVCLBaseControl, IWBaseControl,
  IWBaseHTMLControl, IWControl, IWCompEdit, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  IWCompListbox, IWDBStdCtrls, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;

type
  TFormClientes = class(TFrmPadrao)
    q_uf: TFDQuery;
    q_ufUF: TStringField;
    ds_q_uf: TDataSource;
    COMBO_UF: TIWDBLookupComboBox;
    q_datatable: TFDQuery;
    procedure TESTEAsyncClick(Sender: TObject;
      EventParams: TStringList);
    procedure IWAppFormShow(Sender: TObject);
    procedure TESTEClick(Sender: TObject);
    procedure IWAppFormCreate(Sender: TObject);
    procedure IWBTNACAOAsyncClick(Sender: TObject; EventParams: TStringList);
  private
    { Private declarations }
     procedure TBclientes(aParams: TStrings; out aResult: string);
  public
    { Public declarations }
  end;

var
  FormClientes: TFormClientes;

implementation

{$R *.dfm}

uses ServerController, U_DM, SweetAlerts, UserSessionUnit, System.StrUtils;

procedure TFormClientes.TBclientes(aParams: TStrings; out aResult: string);
var
  wresult: string;
  wtotal: integer;
  btn1: string;
  btn2: string;
  btn3: string;
  btn4: string;
  id: string;
begin
  q_datatable.close;
  q_datatable.SQL.Clear;

  q_datatable.SQL.Add(' select count(*) as total  ');
  q_datatable.SQL.Add(' from clientes   ');
  q_datatable.SQL.Add(' where  1=1   ');

  q_datatable.SQL.Add('and ( nome like ''%' +
    stringreplace(UpperCase(aParams.Values['search[value]']), ' ', '%',
    [rfReplaceAll]) + '%'' ');
  q_datatable.SQL.Add('      OR  cod_cliente like ''%' +
    stringreplace(UpperCase(aParams.Values['search[value]']), ' ', '%',
    [rfReplaceAll]) + '%''  ');

  q_datatable.SQL.Add('      OR  bairro like ''%' +
    stringreplace(UpperCase(aParams.Values['search[value]']), ' ', '%',
    [rfReplaceAll]) + '%''  ');

  q_datatable.SQL.Add('      OR  uf like ''%' +
    stringreplace(UpperCase(aParams.Values['search[value]']), ' ', '%',
    [rfReplaceAll]) + '%'' ) ');

  q_datatable.FetchOptions.RecsMax := -1;
  q_datatable.FetchOptions.RecsSkip := -1;

  q_datatable.Open;

  wtotal := q_datatable.FieldByName('total').AsInteger;

  //
  // Select para montar o resultado do ajax na solicitacao do DATATABLE
  //
  q_datatable.close;

  q_datatable.SQL.Clear;
  q_datatable.SQL.Add('select cod_cliente,nome,endereco,bairro,cod_cidade,uf,cep,data_cadastro from clientes');

  q_datatable.SQL.Add(' where   1=1   ');

  q_datatable.SQL.Add('and ( nome like ''%' +
    stringreplace(UpperCase(aParams.Values['search[value]']), ' ', '%',
    [rfReplaceAll]) + '%'' ');

  q_datatable.SQL.Add('      OR  cod_cliente like ''%' +
    stringreplace(UpperCase(aParams.Values['search[value]']), ' ', '%',
    [rfReplaceAll]) + '%''  ');

  q_datatable.SQL.Add('      OR  bairro like ''%' +
    stringreplace(UpperCase(aParams.Values['search[value]']), ' ', '%',
    [rfReplaceAll]) + '%''  ');

  q_datatable.SQL.Add('      OR  uf like ''%' +
    stringreplace(UpperCase(aParams.Values['search[value]']), ' ', '%',
    [rfReplaceAll]) + '%'' ) ');

  // definindo a ordenação
  case aParams.Values['order[0][column]'].ToInteger of
    0:
      q_datatable.SQL.Add('Order by nome ' + aParams.Values
        ['order[0][dir]'] + ' ');
    1:
      q_datatable.SQL.Add('Order by  cod_cliente ' + aParams.Values
        ['order[0][dir]'] + ' ');

  end;

  q_datatable.FetchOptions.RecsMax := strtoint(aParams.Values['length']);
  q_datatable.FetchOptions.RecsSkip := strtoint(aParams.Values['start']);

  q_datatable.Open;

  //
  // Montagem da variavel com o JASON de resultado da consulta
  //
  wresult := '{' + '"draw": ' + StrToIntDef(aParams.Values['draw'], 0).ToString
    + ', ' + '"recordsTotal": ' + wtotal.ToString + ', ' + '"recordsFiltered": '
    + wtotal.ToString + ', ' + '"data": [';
  q_datatable.First;
  btn2 := '';
  btn3 := '';
  id := '';
  while not q_datatable.Eof do
  begin



    id := q_datatable.FieldByName('cod_cliente').AsString;

    copy(iwacao.Text, 6, Length(iwacao.Text));
    if copy(id, 1, 1) = '0' then
    begin

     id :=  copy(id, 2, Length(id));
    end;




    btn1 := '<button type=\"buttom\" class=\"btn btn-xs btn-danger\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Excluir\" onclick=\"SetaAcao(''ExCli'''
      + ',' + id + ')\" > <i class=\"fa fa-trash\"> </i> </button>" ';

    btn2 := '"<button type=\"buttom\" class=\"btn btn-xs btn-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Editar\" onclick=\"SetaAcao(''AltCl'''
      + ',' + id + ')\" > <i class=\"fa fa-pencil\"> </i> </button> ';
    btn3 := '<button type=\"buttom\" class=\"btn btn-xs btn-info\"  data-toggle=\"tooltip\" data-placement=\"top\" title=\"Aprovar Operador\" onclick=\"SetaAcao(''aprOp'''
      + ',' + id + ')\"> <i class=\"fa fa-thumbs-o-up\"> </i> </button> ';

    btn4 := '<button type=\"buttom\" class=\"btn btn-xs btn-default\"  data-toggle=\"tooltip\" data-placement=\"top\" title=\"Gerar proposta no NBS\" onclick=\"SetaAcao(''ExcDo'''
      + ',' + id + ')\"> <i class=\"fa fa-database\"> </i> </button> "';

    //
    wresult := wresult + '[' + '"' +
      stringreplace(Trim(q_datatable.FieldByName('cod_cliente').AsString), '"', '\"',
      [rfReplaceAll]) + '", ' +
    // Separador de colunas ------------------------------

      '"' + stringreplace(Trim(q_datatable.FieldByName('nome').AsString),
      '"', '\"', [rfReplaceAll]) + '", ' +
    // Separador de colunas ------------------------------

      '"' + stringreplace(Trim(q_datatable.FieldByName('endereco').AsString),
      '"', '\"', [rfReplaceAll]) + '", ' +
    // Separador de colunas ------------------------------

      '"' + stringreplace(Trim(q_datatable.FieldByName('bairro').AsString),
      '"', '\"', [rfReplaceAll]) + '", ' +
      // Separador de colunas ------------------------------

      '"' + stringreplace(Trim(q_datatable.FieldByName('cod_cidade').AsString),
      '"', '\"', [rfReplaceAll]) + '", ' +
      // Separador de colunas ------------------------------

      '"' + stringreplace(Trim(q_datatable.FieldByName('uf').AsString),
      '"', '\"', [rfReplaceAll]) + '", ' +
      // Separador de colunas ------------------------------

      '"' + stringreplace(Trim(q_datatable.FieldByName('cep').AsString),
      '"', '\"', [rfReplaceAll]) + '", ' +
    // Separador de colunas ------------------------------

      '"' + stringreplace(Trim(q_datatable.FieldByName('data_cadastro').AsString),
      '"', '\"', [rfReplaceAll]) + '", ' +
    // Separador de colunas ------------------------------

      btn2 + btn1 + '],';

    q_datatable.Next;

  end;
  q_datatable.close;

  if wtotal <= 0 then
    wresult := wresult + ']}'
  else
    wresult := LeftStr(Trim(wresult), Length(Trim(wresult)) - 1) + ']}';

  //
  // Envia o resultado para o ajax do DataTable
  aResult := wresult;

  // abco


end;

procedure TFormClientes.TESTEAsyncClick(Sender: TObject;
  EventParams: TStringList);
begin
  inherited;
WebApplication.CallBackResponse.AddJavaScriptToExecute
    ('$(''#Cadastro'').modal(''show'');');


end;

procedure TFormClientes.TESTEClick(Sender: TObject);
begin
  inherited;
WebApplication.ShowMessage('Teste');
end;

procedure TFormClientes.IWAppFormCreate(Sender: TObject);
begin
  inherited;
RegisterCallBack('clientes', TBclientes);
end;

procedure TFormClientes.IWAppFormShow(Sender: TObject);
begin
  inherited;
    q_uf.Open();
    COMBO_UF.RefreshItems;
    COMBO_UF.Enabled:=true;
end;

procedure TFormClientes.IWBTNACAOAsyncClick(Sender: TObject;
  EventParams: TStringList);
   var
  id : string;
begin
  inherited;

if copy(iwacao.Text, 1, 5) = 'ExCli' then
  begin
    id := copy(iwacao.Text, 6, Length(iwacao.Text));

    q_datatable.close;
    q_datatable.SQL.Clear;
    q_datatable.SQL.Add(' delete from clientes where cod_cliente like  ' + quotedstr('%'+ id + '%'));
    q_datatable.ExecSQL;
    WebApplication.CallBackResponse.AddJavaScriptToExecute
      ('$("#clientes").DataTable().ajax.reload();');
    AddToInitProc(swalSuccess('Confirmação', ' Cliente: ' + id +
      ', excluído com sucesso !!!'));

  end;
end;

end.
